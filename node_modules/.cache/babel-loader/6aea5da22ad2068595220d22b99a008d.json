{"ast":null,"code":"var _jsxFileName = \"/Users/sainyagoyal/Desktop/react-carousel/src/Components/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport { act } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport { Children } from \"react\";\nimport Item from \"./CarouselItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Carousel(props) {\n  _s();\n\n  const [activeItem, setactiveitem] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: Children.map(props.children, (child, index) => {\n      if (index === activeItem) {\n        return /*#__PURE__*/React.cloneElement(child);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Carousel, \"17cOWBZymNqX2NYgppC60HHU5o4=\");\n\n_c = Carousel;\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/sainyagoyal/Desktop/react-carousel/src/Components/Carousel.js"],"names":["act","React","useState","Children","Item","Carousel","props","activeItem","setactiveitem","map","children","child","index","cloneElement"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,wBAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BN,QAAQ,CAAC,CAAD,CAAzC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAEEC,QAAQ,CAACM,GAAT,CAAaH,KAAK,CAACI,QAAnB,EAA4B,CAACC,KAAD,EAAOC,KAAP,KAAe;AACxC,UAAGA,KAAK,KAAGL,UAAX,EAAsB;AACtB,4BAAON,KAAK,CAACY,YAAN,CAAmBF,KAAnB,CAAP;AACC;AACJ,KAJA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAZMN,Q;;KAAAA,Q;AAaP,eAAeA,QAAf","sourcesContent":["import { act } from \"@testing-library/react\";\nimport React, { useState } from \"react\";\nimport { Children } from \"react\";\nimport Item from \"./CarouselItem\";\n\nfunction Carousel(props){\n    const [activeItem,setactiveitem]=useState(0);\n    return(\n      <div className=\"carousel\">\n\n       {Children.map(props.children,(child,index)=>{\n           if(index===activeItem){\n           return React.cloneElement(child)\n           }\n       })}\n      </div>\n    )\n  }\n  export default Carousel;"]},"metadata":{},"sourceType":"module"}